import { KEYCAP_HEIGHT, KEYCAP_WIDTH, standardKeyShape } from "../constants";

// ANSI Key Shapes
export const keyShapesANSI = {
    Backquote: standardKeyShape,
    Digit1: standardKeyShape,
    Digit2: standardKeyShape,
    Digit3: standardKeyShape,
    Digit4: standardKeyShape,
    Digit5: standardKeyShape,
    Digit6: standardKeyShape,
    Digit7: standardKeyShape,
    Digit8: standardKeyShape,
    Digit9: standardKeyShape,
    Digit0: standardKeyShape,
    Minus: standardKeyShape,
    Equal: standardKeyShape,
    Backspace: `M 0 0 H ${KEYCAP_WIDTH * 2} V ${KEYCAP_HEIGHT} H 0 Z`, // Ширина Backspace больше
    Tab: `M 0 0 H ${KEYCAP_WIDTH * 1.5} V ${KEYCAP_HEIGHT} H 0 Z`, // Ширина Tab
    KeyQ: standardKeyShape,
    KeyW: standardKeyShape,
    KeyE: standardKeyShape,
    KeyR: standardKeyShape,
    KeyT: standardKeyShape,
    KeyY: standardKeyShape,
    KeyU: standardKeyShape,
    KeyI: standardKeyShape,
    KeyO: standardKeyShape,
    KeyP: standardKeyShape,
    BracketLeft: standardKeyShape,
    BracketRight: standardKeyShape,
    Backslash: `M 0 0 H ${KEYCAP_WIDTH * 1.5} V ${KEYCAP_HEIGHT} H 0 Z`,
    // CapsLock: `M 0 0 H ${KEYCAP_WIDTH * 1.75} V ${KEYCAP_HEIGHT} H 0 Z`,
    CapsLock: `M 0 0 H ${KEYCAP_WIDTH * 1.75 + 2} V ${KEYCAP_HEIGHT} H 0 Z`,
    KeyA: standardKeyShape,
    KeyS: standardKeyShape,
    KeyD: standardKeyShape,
    KeyF: standardKeyShape,
    KeyG: standardKeyShape,
    KeyH: standardKeyShape,
    KeyJ: standardKeyShape,
    KeyK: standardKeyShape,
    KeyL: standardKeyShape,
    Semicolon: standardKeyShape,
    Quote: standardKeyShape,
    Enter: `M 0 0 H ${KEYCAP_WIDTH * 2.25} V ${KEYCAP_HEIGHT} H 0 Z`,
    // ShiftLeft: `M 0 0 H ${KEYCAP_WIDTH * 2.25} V ${KEYCAP_HEIGHT} H 0 Z`,
    ShiftLeft: `M 0 0 H ${KEYCAP_WIDTH * 2.25 + 4} V ${KEYCAP_HEIGHT} H 0 Z`,
    IntlBackslash: standardKeyShape,
    KeyZ: standardKeyShape,
    KeyX: standardKeyShape,
    KeyC: standardKeyShape,
    KeyV: standardKeyShape,
    KeyB: standardKeyShape,
    KeyN: standardKeyShape,
    KeyM: standardKeyShape,
    Comma: standardKeyShape,
    Period: standardKeyShape,
    Slash: standardKeyShape,
    ShiftRight: `M 0 0 H ${KEYCAP_WIDTH * 2.75} V ${KEYCAP_HEIGHT} H 0 Z`,
    // ControlLeft: `M 0 0 H ${KEYCAP_WIDTH * 1.25} V ${KEYCAP_HEIGHT} H 0 Z`,
    ControlLeft: `M 0 0 H ${KEYCAP_WIDTH * 1.25 + 2} V ${KEYCAP_HEIGHT} H 0 Z`,
    Fn: standardKeyShape,
    MetaLeft: `M 0 0 H ${KEYCAP_WIDTH * 1.25} V ${KEYCAP_HEIGHT} H 0 Z`,
    AltLeft: `M 0 0 H ${KEYCAP_WIDTH * 1.25} V ${KEYCAP_HEIGHT} H 0 Z`,
    // Space: `M 0 0 H ${KEYCAP_WIDTH * 6.25} V ${KEYCAP_HEIGHT} H 0 Z`,
    Space: `M 0 0 H ${KEYCAP_WIDTH * 6.25 - 32} V ${KEYCAP_HEIGHT} H 0 Z`,
    AltRight: `M 0 0 H ${KEYCAP_WIDTH * 1.25} V ${KEYCAP_HEIGHT} H 0 Z`,
    MetaRight: `M 0 0 H ${KEYCAP_WIDTH * 1.25} V ${KEYCAP_HEIGHT} H 0 Z`,
    ContextMenu: `M 0 0 H ${KEYCAP_WIDTH * 1.25} V ${KEYCAP_HEIGHT} H 0 Z`,
    ControlRight: `M 0 0 H ${KEYCAP_WIDTH * 1.25} V ${KEYCAP_HEIGHT} H 0 Z`,
  };